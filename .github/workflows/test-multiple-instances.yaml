name: Test multiple instances on same machine

on:
  push:
    branches: [main]
    paths: ["docker/**/*", setup.sh]
  pull_request:
    types: [opened, synchronize, reopened]
    paths: ["docker/**/*", setup.sh]

jobs:
  pre_job:
    permissions:
      actions: write
      contents: read
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "same_content"
          skip_after_successful_duplicate: "true"
          cancel_others: "true"

  test-multiple:
    runs-on: ubuntu-latest
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - name: init first instance
        run: |
          set -e

          mkdir instance-1
          cd instance-1

          chmod +x setup.sh

          CI=true sudo -E ./setup.sh

          cd $REPO_NAME/docker && docker compose up -d --quiet-pull --wait --wait-timeout 120

      - name: init second instance
        run: |
          set -e

          mkdir instance-2
          cd instance-2

          chmod +x setup.sh

          CI=true sudo -E ./setup.sh

          cd $REPO_NAME/docker

          sed -i -e 's|CONTAINER_NAME_PREFIX.*|CONTAINER_NAME_PREFIX=second-supabase|' \
                 -e 's|REALTIME_TENANT_NAME.*|REALTIME_TENANT_NAME=second-realtime-dev|' .env

          docker compose up -d --quiet-pull --wait --wait-timeout 120
